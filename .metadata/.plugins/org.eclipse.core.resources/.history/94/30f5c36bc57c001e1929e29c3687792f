/*
 * main.c
 *
 *  Created on: Nov 1, 2023
 *      Author: Mostafa_Salem
 */

#include "COTS/LIB/Bit_Math.h"
#include "COTS/LIB/STD_Types.h"
#include "COTS/MCAL/DIO/DIO_interface.h"
#include "COTS/MCAL/GIE/GIE_interface.h"
#include "COTS/MCAL/SPI/SPI_interface.h"
#include "COTS/MCAL/TIMER0/TIMER0_interface.h"
#include "COTS/MCAL/USART/USART_interface.h"
#include "COTS/HAL/LCD/LCD_interface.h"

u8 DOORS_flag = 0;
u8 MOTORS_flag = 0;
u8 STATUS_flag = 0;

u8 DOORS_STATUS[4]={0};
u8 CAR_DIRECTION = 'S';
u8 car_speed;

void LCD_HOME(){

	LCD_voidGoToXY(0,0);
	LCD_voidWriteString((u8*)"    WELLCOME    ");
	LCD_voidGoToXY(1,0);
	LCD_voidWriteString((u8*)"PRESS:1->DOORS");
	LCD_voidWriteString((u8*)"  ");
	LCD_voidGoToXY(2,0);
	LCD_voidWriteString((u8*)"PRESS:2->MOTORS");
	LCD_voidWriteString((u8*)" ");
	LCD_voidGoToXY(3,0);
	LCD_voidWriteString((u8*)"PRESS:3->STATUS");
	LCD_voidWriteString((u8*)" ");
}

void LCD_DOOR_1(){

	LCD_voidGoToXY(0,0);
	LCD_voidWriteString((u8*)"DOORS:");
	LCD_voidWriteString((u8*)"          ");
	LCD_voidGoToXY(1,0);
	LCD_voidWriteString((u8*)"PRESS:1->DOOR_1");
	LCD_voidWriteString((u8*)" ");
	LCD_voidGoToXY(2,0);
	LCD_voidWriteString((u8*)"PRESS:2->DOOR_2");
	LCD_voidWriteString((u8*)"  ");
	LCD_voidGoToXY(3,0);
	LCD_voidWriteString((u8*)"PRESS:*->MORE");
	LCD_voidWriteString((u8*)"   ");
}

void LCD_DOOR_2(){

	LCD_voidGoToXY(0,0);
	LCD_voidWriteString((u8*)"DOORS:");
	LCD_voidWriteString((u8*)"          ");
	LCD_voidGoToXY(1,0);
	LCD_voidWriteString((u8*)"PRESS:3->DOOR_3");
	LCD_voidWriteString((u8*)"  ");
	LCD_voidGoToXY(2,0);
	LCD_voidWriteString((u8*)"PRESS:4->DOOR_4");
	LCD_voidWriteString((u8*)"  ");
	LCD_voidGoToXY(3,0);
	LCD_voidWriteString((u8*)"PRESS:#->HOME");
	LCD_voidWriteString((u8*)"   ");
}

void LCD_DOOR_STATUS(u8 DOOR_NUMBER){

	LCD_voidGoToXY(0,0);
	LCD_voidWriteString((u8*)"DOOR");
	LCD_voidWriteNumber(DOOR_NUMBER);
	LCD_voidWriteData(':');
	LCD_voidWriteString((u8*)"          ");
	LCD_voidGoToXY(1,0);
	LCD_voidWriteString((u8*)"PRESS:0->CLOSE");
	LCD_voidWriteString((u8*)"  ");
	LCD_voidGoToXY(2,0);
	LCD_voidWriteString((u8*)"PRESS:1->OPEN");
	LCD_voidWriteString((u8*)"   ");
	LCD_voidGoToXY(3,0);
	LCD_voidWriteString((u8*)"PRESS:#->HOME");
	LCD_voidWriteString((u8*)"   ");
}

void LCD_MOTORS_1(){

	LCD_voidGoToXY(0,0);
	LCD_voidWriteString((u8*)"MOTORS:");
	LCD_voidWriteString((u8*)"         ");
	LCD_voidGoToXY(1,0);
	LCD_voidWriteString((u8*)"PRESS:F->FORWARD");
	LCD_voidWriteString((u8*)"");
	LCD_voidGoToXY(2,0);
	LCD_voidWriteString((u8*)"PRESS:B->BACKWARD");
	LCD_voidWriteString((u8*)"");
	LCD_voidGoToXY(3,0);
	LCD_voidWriteString((u8*)"PRESS:*->MORE");
	LCD_voidWriteString((u8*)"   ");
}

void LCD_MOTORS_2(){

	LCD_voidGoToXY(0,0);
	LCD_voidWriteString((u8*)"MOTORS:");
	LCD_voidWriteString((u8*)"         ");
	LCD_voidGoToXY(1,0);
	LCD_voidWriteString((u8*)"PRESS:R->RIGHT");
	LCD_voidWriteString((u8*)"  ");
	LCD_voidGoToXY(2,0);
	LCD_voidWriteString((u8*)"PRESS:L->LEFT");
	LCD_voidWriteString((u8*)"   ");
	LCD_voidGoToXY(3,0);
	LCD_voidWriteString((u8*)"PRESS:*->MORE");
	LCD_voidWriteString((u8*)"   ");
}

void LCD_MOTORS_3(){

	LCD_voidGoToXY(0,0);
	LCD_voidWriteString((u8*)"MOTORS:");
	LCD_voidWriteString((u8*)"         ");
	LCD_voidGoToXY(1,0);
	LCD_voidWriteString((u8*)"PRESS:S->STOP");
	LCD_voidWriteString((u8*)"  ");
	LCD_voidGoToXY(2,0);
	LCD_voidWriteString((u8*)"ENTER SPEED 0->9:");
	LCD_voidWriteString((u8*)"  ");
	LCD_voidGoToXY(3,0);
	LCD_voidWriteString((u8*)"PRESS:#->HOME");
	LCD_voidWriteString((u8*)"  ");
}

void LCD_STATUS_1(){

	LCD_voidGoToXY(0,0);
	LCD_voidWriteString((u8*)"STATUS:");
	LCD_voidWriteString((u8*)"       ");

	LCD_voidGoToXY(1,0);
	LCD_voidWriteString((u8*)"CAR DIRECTION: ");
	LCD_voidWriteData(CAR_DIRECTION);
	LCD_voidWriteString((u8*)"     ");

	LCD_voidGoToXY(2,0);
	LCD_voidWriteString((u8*)"CAR SPEED: ");
	LCD_voidWriteNumber(car_speed);
	LCD_voidWriteString((u8*)"%     ");

	LCD_voidGoToXY(3,0);
	LCD_voidWriteString((u8*)"PRESS:*->MORE");
	LCD_voidWriteString((u8*)"  ");
}

void LCD_STATUS_2(){

	LCD_voidGoToXY(0,0);
	LCD_voidWriteString((u8*)"DOORS STATUS");
	LCD_voidWriteString((u8*)"     ");

	LCD_voidGoToXY(1,0);
	LCD_voidWriteString((u8*)"DOOR_1: ");
	if(DOORS_STATUS[0] == 1){
		LCD_voidWriteString((u8*)"OPEN");
	}else{
		LCD_voidWriteString((u8*)"CLOSED");
	}
	LCD_voidWriteString((u8*)"     ");

	LCD_voidGoToXY(2,0);
	LCD_voidWriteString((u8*)"DOOR_2: ");
	if(DOORS_STATUS[1] == 1){
		LCD_voidWriteString((u8*)"OPEN");
	}else{
		LCD_voidWriteString((u8*)"CLOSED");
	}
	LCD_voidWriteString((u8*)"     ");

	LCD_voidGoToXY(3,0);
	LCD_voidWriteString((u8*)"PRESS:*->MORE");
	LCD_voidWriteString((u8*)"  ");
}

void LCD_STATUS_3(){

	LCD_voidGoToXY(0,0);
	LCD_voidWriteString((u8*)"DOORS STATUS");
	LCD_voidWriteString((u8*)"     ");

	LCD_voidGoToXY(1,0);
	LCD_voidWriteString((u8*)"DOOR_3: ");
	if(DOORS_STATUS[2] == 1){
		LCD_voidWriteString((u8*)"OPEN");
	}else{
		LCD_voidWriteString((u8*)"CLOSED");
	}
	LCD_voidWriteString((u8*)"     ");

	LCD_voidGoToXY(2,0);
	LCD_voidWriteString((u8*)"DOOR_4: ");
	if(DOORS_STATUS[3] == 1){
		LCD_voidWriteString((u8*)"OPEN");
	}else{
		LCD_voidWriteString((u8*)"CLOSED");
	}
	LCD_voidWriteString((u8*)"     ");

	LCD_voidGoToXY(3,0);
	LCD_voidWriteString((u8*)"PRESS:#->HOME");
	LCD_voidWriteString((u8*)"  ");

}

void OPEN_DOOR(u8 DOOR_NUMBER){

	u8 data;

	if(DOOR_NUMBER == 1){
		DIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
		data = SPI_u8Transceive('O');
		DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);
		DOORS_STATUS[0] = 1;
	}else if(DOOR_NUMBER == 2){
		DIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
		data = SPI_u8Transceive('Q');
		DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);
		DOORS_STATUS[1] = 1;
	}else if(DOOR_NUMBER == 3){
		DIO_voidSetPinValue(PORTA,PIN1,PIN_LOW);
		data = SPI_u8Transceive('O');
		DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);
		DOORS_STATUS[2] = 1;
	}else if(DOOR_NUMBER == 4){
		DIO_voidSetPinValue(PORTA,PIN1,PIN_LOW);
		data = SPI_u8Transceive('Q');
		DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);
		DOORS_STATUS[3] = 1;
	}
}

void CLOSE_DOOR(u8 DOOR_NUMBER){

	u8 data;

	if(DOOR_NUMBER == 1){
		DIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
		data = SPI_u8Transceive('P');
		DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);
		DOORS_STATUS[0] = 0;
	}else if(DOOR_NUMBER == 2){
		DIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
		data = SPI_u8Transceive('R');
		DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);
		DOORS_STATUS[1] = 0;
	}else if(DOOR_NUMBER == 3){
		DIO_voidSetPinValue(PORTA,PIN1,PIN_LOW);
		data = SPI_u8Transceive('P');
		DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);
		DOORS_STATUS[2] = 0;
	}else if(DOOR_NUMBER == 4){
		DIO_voidSetPinValue(PORTA,PIN1,PIN_LOW);
		data = SPI_u8Transceive('R');
		DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);
		DOORS_STATUS[3] = 0;
	}
}

void CAR_FORWARD(){

	u8 data;

	DIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
	data = SPI_u8Transceive('C');
	DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);

	DIO_voidSetPinValue(PORTA,PIN1,PIN_LOW);
	data = SPI_u8Transceive('C');
	DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);

	CAR_DIRECTION = 'F';
}

void CAR_BACKWARD(){

	u8 data;

	DIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
	data = SPI_u8Transceive('A');
	DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);

	DIO_voidSetPinValue(PORTA,PIN1,PIN_LOW);
	data = SPI_u8Transceive('A');
	DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);

	CAR_DIRECTION = 'B';
}

void CAR_RIGHT(){

	u8 data;

	DIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
	data = SPI_u8Transceive('C');
	DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);

	DIO_voidSetPinValue(PORTA,PIN1,PIN_LOW);
	data = SPI_u8Transceive('S');
	DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);

	CAR_DIRECTION = 'R';
}

void CAR_LEFT(){

	u8 data;

	DIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
	data = SPI_u8Transceive('S');
	DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);

	DIO_voidSetPinValue(PORTA,PIN1,PIN_LOW);
	data = SPI_u8Transceive('C');
	DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);

	CAR_DIRECTION = 'L';
}

void CAR_STOP(){

	u8 data;

	DIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
	data = SPI_u8Transceive('S');
	DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);

	DIO_voidSetPinValue(PORTA,PIN1,PIN_LOW);
	data = SPI_u8Transceive('S');
	DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);

	CAR_DIRECTION = 'S';
}

void CAR_SPEED(u8 speed){

	u8 data;

	DIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
	data = SPI_u8Transceive(speed);
	DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);

	DIO_voidSetPinValue(PORTA,PIN1,PIN_LOW);
	data = SPI_u8Transceive(speed);
	DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);

	car_speed = (speed-'0')*10;
}

void USART_RX_ISR(){

	u8 USART_DATA = USART_u8ReciveData();

	if(USART_DATA == '#'){
		LCD_HOME();
		DOORS_flag = 0;
		MOTORS_flag = 0;
		STATUS_flag = 0;
	}else{
		if((DOORS_flag == 0) && (MOTORS_flag == 0) && (STATUS_flag == 0)){
			if(USART_DATA == '1'){
				LCD_DOOR_1();
				DOORS_flag = 1;
			}else if(USART_DATA == '2'){
				LCD_MOTORS_1();
				MOTORS_flag = 1;
			}else if(USART_DATA == '3'){
				LCD_STATUS_1();
				STATUS_flag = 1;
			}
		}else if(DOORS_flag == 1){
			if(USART_DATA == '1'){
				LCD_DOOR_STATUS(1);
				DOORS_flag = 3; // DOOR 1
			}else if(USART_DATA == '2'){
				LCD_DOOR_STATUS(2);
				DOORS_flag = 4; // DOOR 2
			}else if(USART_DATA == '*'){
				LCD_DOOR_2();
				DOORS_flag = 5;
			}
		}else if(DOORS_flag == 5){
			if(USART_DATA == '3'){
				LCD_DOOR_STATUS(3);
				DOORS_flag = 6; // DOOR 3
			}else if(USART_DATA == '4'){
				LCD_DOOR_STATUS(4);
				DOORS_flag = 8; // DOOR 4
			}
		}else if((DOORS_flag == 3) || (DOORS_flag == 4) || (DOORS_flag == 6) || (DOORS_flag == 8)){
			if(USART_DATA == '0'){
				CLOSE_DOOR(DOORS_flag/2);
			}else if(USART_DATA == '1'){
				OPEN_DOOR(DOORS_flag/2);
			}
		}else if(MOTORS_flag == 1){
			if(USART_DATA == 'F'){
				CAR_FORWARD();
			}else if(USART_DATA == 'B'){
				CAR_BACKWARD();
			}else if(USART_DATA == '*'){
				LCD_MOTORS_2();
				MOTORS_flag = 2;
			}
		}else if(MOTORS_flag == 2){
			if(USART_DATA == 'R'){
				CAR_RIGHT();
			}else if(USART_DATA == 'L'){
				CAR_LEFT();
			}else if(USART_DATA == '*'){
				LCD_MOTORS_3();
				MOTORS_flag = 3;
			}
		}else if(MOTORS_flag == 3){
			if(USART_DATA == 'S'){
				CAR_STOP();
			}else if((USART_DATA >= '0') && (USART_DATA <= '9')){
				CAR_SPEED(USART_DATA);
			}
		}else if(STATUS_flag == 1){
			if(USART_DATA == '*'){
				LCD_STATUS_2();
				STATUS_flag = 2;
			}
		}else if(STATUS_flag == 2){
			if(USART_DATA == '*'){
				LCD_STATUS_3();
				STATUS_flag = 3;
			}
		}
	}
}


int main(){

	DIO_voidSetPinDirection(PORTA,PIN0,PIN_OUTPUT);
	DIO_voidSetPinDirection(PORTA,PIN1,PIN_OUTPUT);
	DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);
	DIO_voidSetPinValue(PORTA,PIN1,PIN_HIGH);

	DIO_voidSetPinDirection(PORTB,PIN4,PIN_INPUT);
	DIO_voidSetPinDirection(PORTB,PIN5,PIN_OUTPUT);
	DIO_voidSetPinDirection(PORTB,PIN6,PIN_INPUT);
	DIO_voidSetPinDirection(PORTB,PIN7,PIN_OUTPUT);

	DIO_voidSetPinDirection(PORTD,PIN0,PIN_INPUT);
	DIO_voidSetPinDirection(PORTD,PIN1,PIN_OUTPUT);

	GIE_voidEnable();

	SPI_voidInitialize();

	USART_voidInitialize();
	USART_RXC_SetCallBack(USART_RX_ISR);

	LCD_voidInitialize();
	LCD_HOME();

	while(1){

	}

	return 0;
}
