/*
 * TIMER1_program.c
 *
 *  Created on: Oct 28, 2023
 *      Author: Mostafa_Salem
 */

#include "../../LIB/Bit_Math.h"
#include "../../LIB/STD_Types.h"
#include "../../Services/Mapping/Mapping_interface.h"
#include "TIMER1_private.h"
#include "TIMER1_config.h"
#include "TIMER1_interface.h"


void TIMER1_voidEnable(){

	TCCR1B->CS1 = CLOCK_PRESCALER;
}

void TIMER1_voidDisable(){

	TCCR1B->CS1 = Timer_Counter_stopped;
}

void TIMER1_voidInitialize(){

	TCCR1A->COM1A = Compare_Output_Mode_A;
	TCCR1A->COM1B = Compare_Output_Mode_B;

	TCCR1A->FOC1A = Force_Output_Compare_A_STATUS;
	TCCR1A->FOC1B = Force_Output_Compare_B_STATUS;

	TCCR1A->WGM1 = ((TIMER_MODE>>0)&(0b11));
	TCCR1B->WGM1 = ((TIMER_MODE>>2)&(0b11));

	TCCR1B->ICNC1 = Input_Capture_Noise_Canceler_STATUS;

	TCCR1B->ICES1 = Input_Capture_Edge;

	TIMSK->TICIE1 = Input_Capture_Interrupt_STATUS;
	TIMSK->OCIE1A = Output_Compare_A_Match_Interrupt_STATUS;
	TIMSK->OCIE1B = Output_Compare_B_Match_Interrupt_STATUS;
	TIMSK->TOIE1 = Overflow_Interrupt_STATUS;
}

void TIMER0_voidPreLoad(u8 Copy_u8Value){

	TCNT1 = Copy_u8Value;
}

TIMER0_voidSetTimer(u32 Copy_u32TimeMS){

	u32 MAX_NUM;

	#if TIMER_MODE == Normal_MODE
		MAX_NUM=MAX_16BIT_REG;
	#elif TIMER_MODE == PWM_Phase_Correct_8bit  ||  TIMER_MODE == Fast_PWM_8bit
		MAX_NUM=MAX_8BIT_REG;
	#elif TIMER_MODE == PWM_Phase_Correct_9bit  ||  TIMER_MODE == Fast_PWM_9bit
		MAX_NUM=MAX_9BIT_REG;
	#elif TIMER_MODE == PWM_Phase_Correct_10bit  ||  TIMER_MODE == Fast_PWM_10bit
		MAX_NUM=MAX_10BIT_REG;
	#elif TIMER_MODE == CTC_OCR1A  ||  TIMER_MODE == PWM_Phase_Freq_Correct_OCR1A  ||  TIMER_MODE == PWM_Phase_Correct_OCR1A  ||  TIMER_MODE == Fast_PWM_OCR1A
		MAX_NUM=OCR1A;
	#elif TIMER_MODE == CTC_ICR1  ||  TIMER_MODE == PWM_Phase_Freq_Correct_ICR1  ||  TIMER_MODE == PWM_Phase_Correct_ICR1  ||  TIMER_MODE == Fast_PWM_ICR1
		MAX_NUM=ICR1;
	#endif
}
